//recursion

public class quicksort {
    public static void quicksort(int arr[],int lb, int up)
    {
        if(lb<up)
        {
            int part=partition(arr,lb,up);
            quicksort(arr,lb,part-1);
            quicksort(arr,part+1,up);
        }
    }
//partition part
    
    public static int partition(int arr[],int low ,int high)
    {
        int pivot =arr[low];
        int start=low;
        int end=high;
        
        while(start<end)
        {
            while(arr[start]<=pivot)
            {
                start++;
            }
            while(arr[end]>pivot)
            {
                end--;
            }
            if(start<end)
            {
                 int temp = arr[end];
                 arr[end] = arr[start];
                 arr[start] = temp;
            }
        }
        int temp = arr[end];
        arr[end] = arr[low];
        arr[low] = temp;
        return end;
    }
    
 //main   
    
    public static void main(String[] args) {
        int arr[]={9,5,6,4,3,21};
        System.out.println("Array before sorting:");
        printArray(arr);
        
        int n=arr.length;
        quicksort(arr,0,n-1);
        System.out.println("Array after sorting:");
        printArray(arr);
    }
    
    public static void printArray(int[] arr) {
        for (int value : arr) {
            System.out.print(value + " ");
        }
          System.out.println();
    }
}
